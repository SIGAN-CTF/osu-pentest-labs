import flask
import logging
import json
from api.models import Lab
from api.datab import SessionLocal, create_db
from initdb import init_db
from repository import get_all_labs, get_lab
from vagrant import run_machine
from flask import Response
from flask_cors import CORS

app = flask.Flask(__name__, template_folder='../frontend/templates')
app.secret_key = "huisukapidorebanyi"

CORS(app)

IsLogged = False
create_db()

with SessionLocal() as db:
    if len(get_all_labs(db)) <= 0:
        init_db()


@app.route('/')
def index():
    if IsLogged:
        return flask.render_template('index.html', methods=['POST', 'GET'])
    else:
        return flask.redirect('/login')


@app.route('/login', methods=['POST', 'GET'])
def login():
    if flask.request.method == 'POST':
        username = flask.request.form['username']
        password = flask.request.form['password']
        try:
            if username == "admin" and password == "pass":
                IsLogged = True  # python global
                return flask.render_template('index.html', methods=['POST', 'GET'])
            else:
                message = "Неверный логин или пароль"
                return flask.render_template('login.html', methods=['POST', 'GET'], message=message)
        except Exception:
            logging.exception('')
            return flask.render_template('except.html', methods=['GET'])
    else:
        return flask.render_template('login.html', methods=['POST', 'GET'], message="")


@app.route('/api/labs', methods=['GET'])
def list():
    try:
        with SessionLocal() as db_session:
            labs = get_all_labs(db_session)
            result = []
            for lab in labs:
                result.append({
                    'id': lab.id,
                    'name': lab.name,
                    'status': lab.status,
                    'os': lab.os,
                    'logs': lab.logs,
                })
            return result, 200
    except Exception as e:
        return e, 500


@app.route('/api/run', methods=['POST'])
def run():
    try:
        with SessionLocal() as db:
            lab = get_lab(db, flask.request.form["id"])
            if lab:
                code, stdout, stderr = run_machine(lab.path)
                if code == 0:
                    lab.status = "Running"
                    lab.logs = stdout
                else:
                    lab.status = "Error"
                    lab.log = stdout + stderr
                db.commit()
                return {"id": lab.id, "status": lab.status}, 200
            else:
                return "id not found", 404

    except Exception as e:
        return e, 500


@app.route('/api/destroy', methods=['POST'])
def destroy():
    try:
        return "asdfgh"
    except Exception:
        logging.exception(r'api/destroy error')
        return {"code": 500}


@app.route('/api/restore', methods=['POST'])
def restore():
    try:
        return "asdfgh"
    except Exception:
        logging.exception(r'api/restore error')
        return {"code": 500}


if __name__ == "__main__":
    app.run(host="0.0.0.0", port=1337)
